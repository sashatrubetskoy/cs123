import math
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib
matplotlib.style.use('ggplot')

vec_b = [0.0008495145631067961, 0.0003572704537334762, 0.0002641310089804543, 0.0010934937124111536, 0.00023646252069047056, 0.0003770739064856712, 0.000315955766192733, 0.0002755580049600441, 0.0, 0.00026616981634282674, 0.00025157232704402514, 0.00048661800486618007, 0.0008846202451661822, 0.0003403096818104475, 0.00021473051320592657, 0.0001985308715505261, 0.0, 0.0, 0.00018670649738610905, 0.0, 0.00045310376076121433, 0.00013873473917869035, 0.00013218770654329148, 0.00011019283746556474, 0.0003005936725031938, 0.00011298158400180771, 0.00035790980672870435, 0.0, 0.00011266336187471834, 0.0, 0.0003401360544217687, 0.0, 0.0, 0.0002089864158829676, 0.00019976028765481422, 0.00016244314489928524, 0.00020064205457463884, 0.00022091310751104566, 0.0, 9.814505839630975e-05, 9.502993442934525e-05, 9.462528387585163e-05, 0.00015598190609889253, 0.0004341848180041971, 6.319514661274014e-05, 5.734602592040372e-05, 0.0002631578947368421, 0.0004089645018812367, 0.00032283521056029847, 4.845430758794457e-05, 9.063717937097797e-05, 0.00010035122930255896, 4.6891118822095096e-05, 0.0, 8.093889113719143e-05, 7.320108337603396e-05, 0.00016628421297681999, 5.632216277105041e-05, 2.8858363153641924e-05, 0.00026450720273459754, 0.00017309689579566873, 0.0, 2.5583299222267703e-05, 0.0, 2.562328644271914e-05, 0.0, 9.075851428312119e-05, 0.0, 0.00013339939779700424, 4.36852911624656e-05, 6.175825759369242e-05, 0.00016961062247098448, 0.00015216791729673695, 8.649824223214893e-05, 8.584480485636325e-05, 6.215697121510663e-05, 4.161588537796142e-05, 3.76168473320251e-05, 4.8099758899958515e-05, 5.580170306797763e-05, 4.1187615472421946e-05, 5.125911014184794e-05, 7.525339228182396e-05, 0.00012118199049187459, 0.00014466791019508623, 9.640263911864851e-05, 7.082700182862441e-05, 4.9569696900368725e-05, 5.720561988009702e-05, 3.299797612413105e-05, 5.822651008214417e-05]
# vec_a = [0.0, 0.0003572704537334762, 0.0005282620179609086, 0.0, 0.00023646252069047056, 0.0007541478129713424, 0.000315955766192733, 0.0, 0.0005333333333333334, 0.0, 0.0, 0.00016220600162206002, 0.0005054972829521042, 0.00136123872724179, 0.00042946102641185313, 0.0003970617431010522, 0.00039408866995073894, 0.00038030043734550294, 0.00018670649738610905, 0.00017035775127768313, 0.0, 0.0002774694783573807, 0.0003965631196298744, 0.0007713498622589532, 0.0008266325993837829, 0.0006778895040108463, 0.0008351228823669769, 0.0008646245059288538, 0.0002253267237494367, 0.00038441824705279346, 0.0008503401360544217, 0.0005486968449931413, 0.00019992003198720512, 0.0004179728317659352, 9.988014382740711e-05, 0.0005685510071474983, 0.0007356875334403424, 0.0007363770250368188, 0.0002497294597519354, 0.0005888703503778585, 0.0004751496721467262, 0.0005677517032551098, 0.0004679457182966776, 0.0003618206816701643, 0.00018958543983822043, 0.00017203807776121116, 0.0002631578947368421, 0.00020448225094061835, 0.00010761173685343281, 0.0001453629227638337, 0.00018127435874195594, 0.00015052684395383843, 0.00023445559411047547, 0.00012846865364850977, 0.00012140833670578713, 0.00014640216675206792, 9.977052778609199e-05, 0.000140805406927626, 2.8858363153641924e-05, 6.104012370798405e-05, 3.846597684348194e-05, 0.00012761938793741544, 2.5583299222267703e-05, 0.0001365075898219941, 7.686985932815743e-05, 7.634753397465261e-05, 9.075851428312119e-05, 8.804754567466431e-05, 7.622822731257385e-05, 7.64492595343148e-05, 6.175825759369242e-05, 4.361416006396744e-05, 7.132871123284545e-05, 5.560601286352431e-05, 4.2922402428181626e-05, 4.9725576972085305e-05, 9.512202372105466e-05, 6.269474555337517e-05, 4.8099758899958515e-05, 5.580170306797763e-05, 2.941972533744425e-05, 4.193927193423922e-05, 2.3516685088069987e-05, 4.350122735605755e-05, 4.001452835183236e-05, 2.6992738953221582e-05, 2.575527339222706e-05, 2.6691375254044698e-05, 2.288224795203881e-05, 1.8332208957850585e-05, 1.343688694203327e-05]
vec_a = [0.0, 0.0003572704537334762, 0.0005282620179609086, 0.0, 0.00023646252069047056, 0.0007541478129713424, 0.000315955766192733, 0.0, 0.0005333333333333334, 0.0, 0.0, 0.00016220600162206002, 0.0005054972829521042, 0.00136123872724179, 0.00042946102641185313, 0.0003970617431010522, 0.00039408866995073894, 0.00038030043734550294, 0.00018670649738610905, 0.00017035775127768313, 0.0, 0.0002774694783573807, 0.0003965631196298744, 0.0007713498622589532, 0.0008266325993837829, 0.0006778895040108463, 0.0008351228823669769, 0.0008646245059288538, 0.0002253267237494367, 0.00038441824705279346, 0.0008503401360544217, 0.0005486968449931413, 0.00019992003198720512, 0.0004179728317659352, 9.988014382740711e-05, 0.0005685510071474983, 0.0007356875334403424, 0.0007363770250368188, 0.0002497294597519354, 0.0005888703503778585, 0.0004751496721467262, 0.0005677517032551098, 0.0004679457182966776, 0.0003618206816701643, 0.00018958543983822043, 0.00017203807776121116, 0.0002631578947368421, 0.00020448225094061835, 0.00010761173685343281, 0.0001453629227638337, 0.00018127435874195594, 0.00015052684395383843, 0.00023445559411047547, 0.00012846865364850977, 0.00012140833670578713, 0.00014640216675206792, 9.977052778609199e-05, 0.000140805406927626, 2.8858363153641924e-05, 6.104012370798405e-05, 3.846597684348194e-05, 0.00012761938793741544, 2.5583299222267703e-05, 0.0001365075898219941, 7.686985932815743e-05, 7.634753397465261e-05, 9.075851428312119e-05, 8.804754567466431e-05, 7.622822731257385e-05, 7.64492595343148e-05, 6.175825759369242e-05, 4.361416006396744e-05, 7.132871123284545e-05, 5.560601286352431e-05, 4.2922402428181626e-05, 4.9725576972085305e-05, 9.512202372105466e-05, 6.269474555337517e-05, 4.8099758899958515e-05, 5.580170306797763e-05, 2.941972533744425e-05, 4.193927193423922e-05, 2.3516685088069987e-05, 4.350122735605755e-05, 4.001452835183236e-05, 2.6992738953221582e-05, 2.575527339222706e-05, 2.6691375254044698e-05, 2.288224795203881e-05, 1.8332208957850585e-05, 1.343688694203327e-05]
distances = []

def smoothing(k, distances):
    smoothed = []
    for i in range(k, len(distances) - k):
    
        total = 0
        for j in range(-k, k):
            total += distances[i + j]
        smoothed.append(total/(2*k+1))
    return smoothed



for shift in range(-60, 60):
    dist = 0
    for i in range(0, 91 - abs(shift)):
        dist += abs(vec_a[i] - vec_b[i + shift])
        dist /= 91 - abs(shift)
    distances.append(dist)

smoothed = smoothing(7, distances)



s = pd.Series(smoothed)
s.plot.area();
plt.show()

